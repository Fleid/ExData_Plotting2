list(
"NbPieces"= "3",
"Superficie m2"= "60",
"Arrondissement"= "Paris 15e"
)
,
GlobalParameters=
fromJSON('{}')
))
body = toJSON(req)
api_key = "igI9Kobb6uwCt31TXPhDYJI2kK30oZJbRfHj94UZoDpXkee4X+nVDwnrVrac+TsuI0nMlOSUSueqwJYMosYG+g==" # Replace this with the API key for the web service
authz_hdr = paste('Bearer', api_key, sep=' ')
h$reset()
curlPerform(url = "https://ussouthcentral.services.azureml.net/workspaces/bb7225cedf354dc9942b5f1c1064ad9e/services/38b29b03e71a4a37ad67499f4f167eb7/score",
httpheader=c('Content-Type' = "application/json", 'Authorization' = authz_hdr),
postfields=body,
writefunction = h$update,
verbose = TRUE
)
result = h$value()
print(result)
GlobalParameters=
;
library("RCurl")
library("RJSONIO")
# Accept SSL certificates issued by public Certificate Authorities
options(RCurlOptions = list(sslVersion=3L, cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
h = basicTextGatherer()
req = list(Id="score00001",
Instance=list(FeatureVector=
list(
"NbPieces"= "0",
"SuperficieM2"= "0",
"PrixEuro"= "0",
"Arrondissement"= "0",
"CodePostal"= "0"
)
,
GlobalParameters=
fromJSON('{}')
))
body = toJSON(req)
api_key = "i+298tmkI7OfaRVNQUIqig4NVKN+LXfB9E7BZZd9EaKTR3xIa/Nj5W6Hx44ZQWrPI6RcoSw95Pdv1ip3bABBqw==" # Replace this with the API key for the web service
authz_hdr = paste('Bearer', api_key, sep=' ')
h$reset()
curlPerform(url = "https://ussouthcentral.services.azureml.net/workspaces/bb7225cedf354dc9942b5f1c1064ad9e/services/7b1ad4d3b7da48b49339c184d5e12d7e/score",
httpheader=c('Content-Type' = "application/json", 'Authorization' = authz_hdr),
postfields=body,
writefunction = h$update,
verbose = TRUE
)
result = h$value()
print(result)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
irquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
NEI <- readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("exdata-data-NEI_data/Source_Classification_Code.rds")
# Calculate the sum of emissions per year
p1 <- aggregate(NEI$Emissions, by=list(NEI$year), FUN = sum)
names(p1) <- c("Year","Emissions")
# Alteration of the set so that it fits the hist function correctly
p2 <- t(as.matrix(p1))
setwd("~/Documents/GitHub/ExData_Plotting2")
NEI <- readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("exdata-data-NEI_data/Source_Classification_Code.rds")
# Calculate the sum of emissions per year
p1 <- aggregate(NEI$Emissions, by=list(NEI$year), FUN = sum)
names(p1) <- c("Year","Emissions")
# Alteration of the set so that it fits the hist function correctly
p2 <- t(as.matrix(p1))
barplot(p2,beside=FALSE,col="red",main="Total PM2.5 Emissions per Year",xlab="Year", ylab="Tons",names=p2[1,],las=2)
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year", ylab="Tons",names=p2[1,],las=2)
axis(2, axTicks(2), format(axTicks(2), scientific = F))
axis(2, axTicks(2), format(axTicks(2), scientific = F), las=2)
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year", ylab="Tons",names=p2[1,],las=2)
axis(2, axTicks(2), format(axTicks(2), scientific = F), las=2)
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
axis(2, axTicks(2), format(axTicks(2), scientific = F), las=2)
?axTicks
pts <- pretty(p2[2,] / 1000000)
pts
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
pts <- pretty(p2[2,] / 1000000)
axis(2, at = pts, labels = paste(pts, "MM", sep = ""))
axis(2, axTicks(2), at = pts, labels = paste(pts, "MM", sep = ""))
axis(2, axTicks(2), at = pts, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
pts <- pretty(p2[2,] / 1000000)
axis(2, axTicks(2), at = pts, labels = paste(pts, "MM", sep = ""))
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
pts <- pretty(p2[2,] / 100000)
axis(2, axTicks(2), at = pts, labels = paste(pts, "MM", sep = ""))
pts
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
pts <- pretty(p2[2,] / 10000000)
axis(2, axTicks(2), at = pts, labels = paste(pts, "MM", sep = ""))
p2
?at
?axTicks
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
pts <- pretty(p2[2,] / 1000000)
axis(2, at = pts, labels = paste(pts, "MM", sep = ""))
axis(2, at = pts, labels = paste(pts, "MM", sep = ""))
dev.off()
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
pts <- pretty(p2[2,] / 1000000)
axis(2, axTicks(2), labels = paste(pts, "MM", sep = ""))
axis(2, axTicks(2))
axis(2, axTicks(2), format(axTicks(2), scientific = F))
axis(2, axTicks(2), format(axTicks(2), scientific = F),las=2)
adev.off()
dev.off()
png("plot1.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="red",yaxt="n",main="Total PM2.5 Emissions per Year",xlab="Year",names=p2[1,],las=2)
axis(2, axTicks(2), format(axTicks(2), scientific = F),las=2)
dev.off()
png("plot1.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total PM2.5 Emissions per Year",names=p2[1,],las=2)
axis(2, axTicks(2), format(axTicks(2), scientific = F),las=2)
dev.off()
png("plot1.png",width= 500, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total PM2.5 Emissions per Year",names=p2[1,],las=2)
axis(2, axTicks(2), format(axTicks(2), scientific = F),las=2)
dev.off()
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total PM2.5 Emissions per Year",names=p2[1,],las=2)
axis(2, at=axTicks(2,log=TRUE), labels=format(axTicks(2, log=TRUE), scientific=FALSE))
axis(2, at=axTicks(2,log=TRUE), labels=format(axTicks(2, log=TRUE), scientific=FALSE))
axis(2, c(1,10,100))
axis(2, c(1000000))
pts <- pretty(p2[2,] / 1000000)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""))
pts <- seq(1,7)
pts
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""))
dev.off()
png("plot1.png",width= 500, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total PM2.5 Emissions per Year",names=p2[1,],las=2)
pts <- seq(1,7)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot1.png",width= 500, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total PM2.5 Emissions per Year",names=p2[1,],las=2)
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot1.png",width= 500, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total PM2.5 Emissions per Year in Tons",names=p2[1,],las=2)
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot1.png",width= 500, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total PM2.5 Emissions per Year in Tons",names=p2[1,])
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot1.png",width= 500, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Tons of PM2.5 Emissions per Year",names=p2[1,])
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot1.png",width= 500, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total Tons of PM2.5 Emissions per Year",names=p2[1,])
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
?aggregate
subset(NEI,NEI$fips == "24510")
p1 <- aggregate(NEI$Emissions, by=list(NEI$year),subset(NEI,NEI$fips == "24510"), FUN = sum)
NEI_Baltimore <- subset(NEI,NEI$fips == "24510")
p1 <- aggregate(NEI_Baltimore$Emissions, by=list(NEI_Baltimore$year),subset(NEI,NEI$fips == "24510"), FUN = sum)
summary(NEI_Baltimore)
head(NEI_Baltimore)
p1 <- aggregate(NEI_Baltimore$Emissions, by=list(NEI_Baltimore$year), FUN = sum)
names(p1) <- c("Year","Emissions")
p2 <- t(as.matrix(p1))
p1 <- aggregate(NEI$Emissions, by=list(NEI$year), FUN = sum)
names(p1) <- c("Year","Emissions")
# Alteration of the set so that it fits the hist function correctly
p2 <- t(as.matrix(p1))
# Histogram drawing
png("plot1.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total Tons of PM2.5 Emissions per Year",names=p2[1,])
## special treatment for the y label format
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",yaxt="n",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
## special treatment for the y label format
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
EI_Baltimore <- subset(NEI,NEI$fips == "24510")
p1 <- aggregate(NEI_Baltimore$Emissions, by=list(NEI_Baltimore$year), FUN = sum)
names(p1) <- c("Year","Emissions")
# Alteration of the set so that it fits the hist function correctly
p2 <- t(as.matrix(p1))
# Histogram drawing
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",yaxt="n",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
## special treatment for the y label format
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",yaxt="n",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
## special treatment for the y label format
pts <- seq(0,8)
axis(2, at = pts*1000, labels = paste(pts, "M", sep = ""),las=2)
dev.off()
p1 <- aggregate(NEI$Emissions, by=list(NEI$year), FUN = sum)
names(p1) <- c("Year","Emissions")
# Alteration of the set so that it fits the hist function correctly
p2 <- t(as.matrix(p1))
# Histogram drawing
png("plot1.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total Tons of PM2.5 Emissions per Year (in Millions)",names=p2[1,])
## special treatment for the y label format
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
pts <- pretty(p2[2,])
pts
NEI_Baltimore <- subset(NEI,NEI$fips == "24510")
p1 <- aggregate(NEI_Baltimore$Emissions, by=list(NEI_Baltimore$year), FUN = sum)
names(p1) <- c("Year","Emissions")
# Alteration of the set so that it fits the hist function correctly
p2 <- t(as.matrix(p1))
pts <- pretty(p2[2,])
pts
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",yaxt="n",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
## special treatment for the y label format
pts <- pretty(p2[2,])
axis(2, at = pts,las=2)
dev.off()
?total
?sum
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",las=2,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",ylas=2,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
dev.off()
p2
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#385c8d",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2[1,])
dev.off()
p2
p1 <- aggregate(NEI$Emissions, by=list(NEI$year), FUN = sum)
names(p1) <- c("Year","Emissions")
# Alteration of the set so that it fits the hist function correctly
p2 <- t(as.matrix(p1))
# Histogram drawing
png("plot1.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",yaxt="n",main="Total Tons of PM2.5 Emissions per Year (in Millions)",names=p2[1,])
## special treatment for the y label format
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
p2
p1_Baltimore <- aggregate(NEI_Baltimore$Emissions, by=list(NEI_Baltimore$year), FUN = sum)
names(p1_Baltimore) <- c("Year","Emissions")
p2 <- t(as.matrix(p1_Baltimore))
p2_Baltimore <- t(as.matrix(p1_Baltimore))
p2 <- t(as.matrix(p1))
View(`p2`)
View(`p2_Baltimore`)
View(`p2`)
View(`p2_Baltimore`)
?int
?as
?as.integer
p2[1,]
p2_Baltimore[1,]
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,])
dev.off()
p2
p2_Baltimore
as.integer(p2_Baltimore[1,])
p2_Baltimore[1,]<-as.integer(p2_Baltimore[1,])
p2_Baltimore
par(mar=c(6, 4, 4, 2) + 0.1)
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,])
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
par(mar=c(6, 4, 4, 2) + 0.1)
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,])
dev.off()
plot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,])
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,])
dev.off()
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,])
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,],width=0)
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,],border=NA)
png("plot1.png",width= 480, height = 480,  units= "px")
barplot(p2,beside=FALSE,col="#223856",border=NA,yaxt="n",main="Total Tons of PM2.5 Emissions per Year (in Millions)",names=p2[1,])
## special treatment for the y label format
pts <- seq(0,8)
axis(2, at = pts*1000000, labels = paste(pts, "MM", sep = ""),las=2)
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2_Baltimore,beside=FALSE,main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,],border=NA,color="")
dev.off()
dev.off()
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2_Baltimore,beside=FALSE,col="bc5e56",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,],border=NA)
dev.off()
png("plot2.png",width= 480, height = 480,  units= "px")
barplot(p2_Baltimore,beside=FALSE,col="#bc5e56",main="Baltimore: Tons of PM2.5 Emissions per Year",names=p2_Baltimore[1,],border=NA)
dev.off()
library(ggplot2)
list(NEI_Baltimore$year)
list(c(NEI_Baltimore$year,NEI_Baltimore$type)
)
pp1_Baltimore <- aggregate(NEI_Baltimore$Emissions, by=list(c(NEI_Baltimore$year,NEI_Baltimore$type)), FUN = sum)
pp1_Baltimore <- aggregate(NEI_Baltimore$Emissions, by=list(NEI_Baltimore$year,NEI_Baltimore$type), FUN = sum)
pp1_Baltimore
NEI_Baltimore <- subset(NEI,NEI$fips == "24510")
p1_Baltimore_Type <- aggregate(NEI_Baltimore$Emissions, by=list(NEI_Baltimore$year,NEI_Baltimore$type), FUN = sum)
names(p1_Baltimore_Type) <- c("Year","Type","Emissions")
p1_Baltimore_Type
p2_Baltimore_Type <- t(as.matrix(p1_Baltimore))
p2_Baltimore_Type
p2_Baltimore_Type <- t(as.matrix(p1_Baltimore_Type))
p2_Baltimore_Type
?qplot
qplot(Year,Emissions,p1_Baltimore_Type)
qplot(p1_Baltimore_Type$Year,p1_Baltimore_Type$Emissions,p1_Baltimore_Type,color=p1_Baltimore_Type$Type)+geom_line()
qplot(p1_Baltimore_Type$Year,p1_Baltimore_Type$Emissions,p1_Baltimore_Type,color=p1_Baltimore_Type$Type,xlab="",ylab="")+geom_line()
qplot(p1_Baltimore_Type$Year,p1_Baltimore_Type$Emissions,p1_Baltimore_Type,color=Type,xlab="",ylab="")+geom_line()
qplot(p1_Baltimore_Type$Year,p1_Baltimore_Type$Emissions,data=p1_Baltimore_Type,color=Type,xlab="",ylab="")+geom_line()
qplot(x=Year,y=Emissions,data=p1_Baltimore_Type,color=Type,xlab="",ylab="")+geom_line()
qplot(x=Year,y=Emissions,data=p1_Baltimore_Type,color=Type,xlab="",ylab="")+geom_line()+ggtitle("Baltimore : Tons of PM2.5 Emissions per Year and Type")
png("plot3.png",width= 480, height = 480,  units= "px")
qplot(x=Year,y=Emissions,data=p1_Baltimore_Type,color=Type,xlab="",ylab="")+geom_line()+ggtitle("Baltimore : Tons of PM2.5 Emissions per Year and Type")
dev.off()
dev.off()
dev.off()
SCC
head(SCC)
unique(SCC$.SCC.Level.One)
unique(SCC$SCC.Level.One)
unique(SCC$SCC.Level.Two)
unique(SCC$EI.Sector)
grep('*coal*',unique(SCC$EI.Sector))
unique(SCC$EI.Sector)[1,]
unique(SCC$EI.Sector)[EI.Sector %like% "Coal"]
grep('*',unique(SCC$EI.Sector))
grep('.*coal.*',unique(SCC$EI.Sector))
grep('.*Coal.*',unique(SCC$EI.Sector))
unique(SCC$EI.Sector)[grep('.*Coal.*',unique(SCC$EI.Sector)),]
unique(SCC$EI.Sector)[grep('.*Coal.*',unique(SCC$EI.Sector))]
head(SCC)
p4 <- merge(x=NEI,y=SCC,by="SCC",all.x=TRUE)
Coal_Filter <- unique(SCC$EI.Sector)[grep('.*Coal.*',unique(SCC$EI.Sector))]
SCC_Coal <- subset(SCC,SCC$EI.Sector %in% Coal_Filter)
Coal_Filter
List(Coal_Filter)
list(Coal_Filter)
SCC_Coal <- subset(SCC,SCC$EI.Sector %in% list(Coal_Filter))
?subset
subset(SCC,grep('.*Coal.*',unique(SCC$EI.Sector)),select=SCC)
head(SCC)
Coal_Filter <- unique(SCC$EI.Sector)[grep('.*Coal.*',unique(SCC$EI.Sector))]
subset(SCC,grep('.*Coal.*',unique(SCC$EI.Sector)),select=SCC)
subset(SCC,grep('.*Coal.*',unique(EI.Sector)),select=SCC)
subset(SCC,EI.Sector %in% grep('.*Coal.*',unique(EI.Sector)),select=SCC)
subset(SCC,EI.Sector %in% grep('.*Coal.*',unique(EI.Sector)))
subset(SCC,EI.Sector %in% grep('.*Coal.*',EI.Sector))
subset(SCC,EI.Sector %in% grep('.*Coal.*',EI.Sector))
subset(SCC,grep('.*Coal.*',EI.Sector))
subset(SCC,grep('.*Coal.*',EI.Sector))
SCC[EI.Sector %like% "Coal"]
SCC_T <- as.data.table(SCC)
library(data.table)
SCC_T <- as.data.table(SCC)
SCC_T[EI.Sector %like% "Coal"]
SCC_T[EI.Sector %like% "Coal"]$SCC
SCC_T[EI.Sector %like% "Coal"]$SCC
NEI_Coal <- subset(NEI, SCC %in% SCC_T[EI.Sector %like% "Coal"]$SCC)
SCC_T <- as.data.table(SCC)
SCC_Coal <- SCC_T[EI.Sector %like% "Coal"]$SCC
NEI_Coal <- subset(NEI, SCC %in% SCC_Coal)
qplot(x=Year,y=Emissions,data=NEI_Coal,xlab="",ylab="")+geom_line()+ggtitle("Baltimore : Tons of PM2.5 Emissions per Year and Type")
qplot(x=year,y=Emissions,data=NEI_Coal,xlab="",ylab="")+geom_line()+ggtitle("Baltimore : Tons of PM2.5 Emissions per Year and Type")
p4 <- merge(x=NEI_Coal, y=SCC, by=SCC)
?merge
p4 <- merge(x=NEI_Coal, y=SCC, by="SCC")
p4
head(p4)
p4_sum <- aggregate(p4$Emissions, by=list(p4$year,p4$EI.Sector), FUN = sum)
head(p4_sum)
names(p4_sum) <- c(Year,EI.Sector,Emissions)
names(p4_sum) <- c("Year","EI.Sector","Emissions")
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sectorxlab="",ylab="")+geom_line()+ggtitle("Baltimore : Tons of PM2.5 Emissions per Year and Type")
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Baltimore : Tons of PM2.5 Emissions per Year and Type")
png("plot4.png",width= 480, height = 480,  units= "px")
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")
dev.off()
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.5, .5))
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(0, .5))
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(0.1, .1))
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.2, .5))
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.3, .5))
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5))
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5)) + scale_y_continuous(nlabels = comma)
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5)) + scale_y_continuous(nlabels = Emissions)
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5)) + scale_y_continuous()
?scale_y_discrete
qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5)) + scale_y_continuous(labels = comma)
require(scales)
p + scale_x_continuous(labels = comma)
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5))
require(scales)
q + scale_x_continuous(labels = comma)
png("plot4.png",width= 480, height = 480,  units= "px")
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5))
require(scales)
q + scale_y_continuous(labels = comma)
dev.off()
dev.off()
png("plot4.png",width= 480, height = 480,  units= "px")
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5))
require(scales)
q + scale_y_continuous(labels = comma)
dev.off()
?scale_y_continuous
dev.off()
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5))
require(scales)
q + scale_y_continuous(labels = comma,breaks=1:10)
seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000)
pretty(seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000))
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="")+geom_line()+ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")+ theme(legend.position=c(.4, .5))
require(scales)
q + scale_y_continuous(labels = comma, breaks=pretty(seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000)))
dev.off()
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="") + geom_line()
q <- q + ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")
q <- q + theme(legend.position="down")
require(scales)
q + scale_y_continuous(labels = comma, breaks=pretty(seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000)))
dev.off()
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="") + geom_line()
q <- q + ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")
q <- q + theme(legend.position="bottom")
require(scales)
q + scale_y_continuous(labels = comma, breaks=pretty(seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000)))
dev.off()
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="") + geom_line()
q <- q + ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")
q <- q + theme(legend.position="bottom")
require(scales)
q + scale_y_continuous(labels = comma, breaks=pretty(seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000)))
q <- q + theme(legend.position="bottom") + guides(col = guide_legend(nrow = 3))
dev.off()
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="") + geom_line()
q <- q + ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")
q <- q + theme(legend.position="bottom") + guides(col = guide_legend(nrow = 3))
require(scales)
q + scale_y_continuous(labels = comma, breaks=pretty(seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000)))
png("plot4.png",width= 480, height = 480,  units= "px")
q <- qplot(x=Year,y=Emissions,data=p4_sum,color=EI.Sector,xlab="",ylab="") + geom_line()
q <- q + ggtitle("Total Tons of PM2.5 Emissions per Year and Sector")
q <- q + theme(legend.position="bottom") + guides(col = guide_legend(nrow = 3))
require(scales)
q + scale_y_continuous(labels = comma, breaks=pretty(seq(min(p4_sum$Emissions), max(p4_sum$Emissions), by = 50000)))
dev.off()
